/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package vista;

import Conexion.Conexion;
import Controlador.Controlador_Cliente;
import Modelo.Cliente;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Connection;
import java.awt.Dimension;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Bryan
 */
public class FrGestionarCliente extends javax.swing.JInternalFrame {

    private int idCliente;

    public FrGestionarCliente() {
        initComponents();
        this.setSize(new Dimension(900, 500));
        this.setTitle("Gestionar Cliente");
        this.CargarTablaClientes();

        //insertar imagenes con codigo
        ImageIcon fondo = new ImageIcon("src/img/fondogestcat.jpg");
        Icon icono = new ImageIcon(fondo.getImage().getScaledInstance(900, 500, WIDTH));
        jLabel_fondo.setIcon(icono);
        this.repaint();
        addComponentListener(new java.awt.event.ComponentAdapter() {
            @Override
            public void componentShown(java.awt.event.ComponentEvent evt) {
                if (getParent() != null) {
                    setLocation((getParent().getWidth() - getWidth()) / 2, (getParent().getHeight() - getHeight()) / 2);
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_cliente = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jButton_actualizar = new javax.swing.JButton();
        jButton_eliminar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        txt_buscar = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        txt_nombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txt_telefono = new javax.swing.JTextField();
        txt_apellido = new javax.swing.JTextField();
        txt_direccion = new javax.swing.JTextField();
        txt_cedula = new javax.swing.JTextField();
        jLabel_fondo = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Gesti√≥n de cliente");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 10, 250, 40));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable_cliente.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTable_cliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable_cliente);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 710, 250));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 730, 280));

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton_actualizar.setBackground(new java.awt.Color(102, 255, 51));
        jButton_actualizar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton_actualizar.setText("Actualizar");
        jButton_actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_actualizarActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 90, 30));

        jButton_eliminar.setBackground(new java.awt.Color(255, 0, 51));
        jButton_eliminar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton_eliminar.setText("Eliminar");
        jButton_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_eliminarActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 90, 30));

        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 100, 30));

        txt_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_buscarActionPerformed(evt);
            }
        });
        jPanel2.add(txt_buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 170, 120, 30));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 60, 120, 280));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel3.add(txt_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 10, 180, 30));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Nombre:");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 70, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("Telefono:");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 70, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("Apellido:");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 10, 70, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("Direccion");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 60, 90, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("Cedula:");
        jPanel3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 10, 90, -1));
        jPanel3.add(txt_telefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, 180, 30));
        jPanel3.add(txt_apellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 10, 180, 30));
        jPanel3.add(txt_direccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 50, 180, 30));
        jPanel3.add(txt_cedula, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 10, 170, 30));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 350, 870, 100));
        getContentPane().add(jLabel_fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, 890, 460));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_actualizarActionPerformed

        if (txt_nombre.getText().isEmpty() && txt_apellido.getText().isEmpty() && txt_cedula.getText().isEmpty() && txt_telefono.getText().isEmpty() && txt_direccion.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "los campos estan vacios");

        } else {

            Cliente cliente = new Cliente();
            Controlador_Cliente controladorcliente = new Controlador_Cliente();

            cliente.setNombre(txt_nombre.getText().trim());
            cliente.setApellido(txt_apellido.getText().trim());
            cliente.setCedula(txt_cedula.getText().trim());
            cliente.setTelefono(txt_telefono.getText().trim());
            cliente.setDireccion(txt_direccion.getText().trim());

            if (controladorcliente.actualizar(cliente, idCliente)) {
                JOptionPane.showMessageDialog(null, "Actualizado extiosamente");
                this.CargarTablaClientes();
                this.Limpiar();

            } else {
                JOptionPane.showMessageDialog(null, "Error al actualizar");

            }

        }
    }//GEN-LAST:event_jButton_actualizarActionPerformed

    private void jButton_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_eliminarActionPerformed
        Controlador_Cliente controladorcliente = new Controlador_Cliente();
        if(idCliente==0){
            JOptionPane.showMessageDialog(null, "Seleccione un cliente");
            
        }else{
            if(!controladorcliente.eliminar(idCliente)){
                JOptionPane.showMessageDialog(null, "Cliente eliminado");
                this.CargarTablaClientes();
                this.Limpiar();
            }else{
                JOptionPane.showMessageDialog(null, "Error al eliminar cliente");
                this.Limpiar();
                
            }
            
        }

    }//GEN-LAST:event_jButton_eliminarActionPerformed

    private void txt_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_buscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_buscarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.buscarClientePorNombre();
        this.EnviarDatosClienteSeleccionada(idCliente);


    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton_actualizar;
    private javax.swing.JButton jButton_eliminar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel_fondo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    public static javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable_cliente;
    private javax.swing.JTextField txt_apellido;
    private javax.swing.JTextField txt_buscar;
    private javax.swing.JTextField txt_cedula;
    private javax.swing.JTextField txt_direccion;
    private javax.swing.JTextField txt_nombre;
    private javax.swing.JTextField txt_telefono;
    // End of variables declaration//GEN-END:variables

    //cargar categorias combo box
    //mostrar todos los clientes
    private void CargarTablaClientes() {
        Connection con = Conexion.Conectar();
        DefaultTableModel model = new DefaultTableModel();
        String sql = "select * from clientes";
        Statement st;

        try {
            st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            FrGestionarCliente.jTable_cliente = new JTable(model);
            FrGestionarCliente.jScrollPane1.setViewportView(FrGestionarCliente.jTable_cliente);

            model.addColumn("N¬∞");
            model.addColumn("nombre");
            model.addColumn("apellido");
            model.addColumn("cedula");
            model.addColumn("telefono");
            model.addColumn("direccion");
            model.addColumn("estado");

            while (rs.next()) {

                Object fila[] = new Object[7];
                for (int i = 0; i < 7; i++) {
                    fila[i] = rs.getObject(i + 1);

                }

                model.addRow(fila);
            }
            con.close();

        } catch (SQLException e) {
            System.out.println("Error al llenar tabla cliente" + e);
        }

        jTable_cliente.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int fila_point = jTable_cliente.rowAtPoint(e.getPoint());
                int columna_point = 0;
                int selectedRow = jTable_cliente.getSelectedRow();

                if (fila_point >= 0) {
                    idCliente = (int) jTable_cliente.getValueAt(selectedRow, 0);
                    EnviarDatosClienteSeleccionada(idCliente);

                }
            }
        });

    }

    private void EnviarDatosClienteSeleccionada(int idCliente) {
        try {
            Connection con = Conexion.Conectar();
            PreparedStatement pst = con.prepareStatement("select * from clientes where idClientes='" + idCliente + "'");
            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                txt_nombre.setText(rs.getString("nombre"));
                txt_apellido.setText(rs.getString("apellido"));
                txt_cedula.setText(rs.getString("cedula"));
                txt_telefono.setText(rs.getString("telefono"));
                txt_direccion.setText(rs.getString("direccion"));

            }
            con.close();

        } catch (SQLException e) {
            System.out.println("Error al cargar cliente" + e);
        }
    }

    //metodo para limpiar
    private void Limpiar() {
        txt_nombre.setText("");
        txt_telefono.setText("");
        txt_apellido.setText("");
        txt_direccion.setText("");
        txt_cedula.setText("");

    }

    private void buscarClientePorNombre() {
        // Establecemos la conexi√≥n a la base de datos
        Connection con = Conexion.Conectar();
        String nombreApellido = txt_buscar.getText().trim(); // Obtiene el nombre o apellido desde el campo de texto.

        // Si el campo est√° vac√≠o, no hacemos la b√∫squeda
        if (nombreApellido.isEmpty()) {
            return;
        }

        // Dividimos la cadena ingresada en nombre y apellido
        String[] nombreApellidoArray = nombreApellido.split(" ");
        String nombreCliente = nombreApellidoArray[0]; // Primer parte (nombre)
        String apellidoCliente = nombreApellidoArray.length > 1 ? nombreApellidoArray[1] : ""; // Segunda parte (apellido)

        DefaultTableModel model = new DefaultTableModel();

        // Consulta SQL para buscar por nombre y apellido (usamos LIKE)
        String sql = "SELECT * FROM clientes WHERE nombre LIKE ? and apellido LIKE ?";

        try {
            // Preparamos la consulta
            PreparedStatement pst = con.prepareStatement(sql);

            // Establecemos los par√°metros para la b√∫squeda (nombre y apellido)
            pst.setString(1, "%" + nombreCliente + "%"); // B√∫squeda con comod√≠n en nombre
            pst.setString(2, "%" + apellidoCliente + "%"); // B√∫squeda con comod√≠n en apellido

            // Ejecutamos la consulta
            ResultSet rs = pst.executeQuery();

            // Definimos las columnas de la tabla
            model.addColumn("N¬∞");
            model.addColumn("nombre");
            model.addColumn("apellido");
            model.addColumn("cedula");
            model.addColumn("telefono");
            model.addColumn("direccion");
            model.addColumn("estado");

            // Procesamos los resultados de la consulta y los agregamos a la tabla
            while (rs.next()) {
                Object[] fila = new Object[7];
                for (int i = 0; i < 7; i++) {
                    fila[i] = rs.getObject(i + 1);
                }
                model.addRow(fila);
            }

            // Establecemos el modelo en la tabla
            jTable_cliente.setModel(model);

            // Cerramos la conexi√≥n
            con.close();
        } catch (SQLException e) {
            System.out.println("Error al buscar cliente: " + e);
        }

//        // Agregamos un evento para manejar la selecci√≥n de una fila de la tabla
//        jTable_cliente.addMouseListener(new java.awt.event.MouseAdapter() {
//            public void mouseClicked(java.awt.event.MouseEvent evt) {
//                int selectedRow = jTable_cliente.getSelectedRow(); // Obtiene la fila seleccionada.
//
//                if (selectedRow >= 0) {
//                    // Obtenemos el ID del cliente seleccionado
//                    int idClienteSeleccionado = (int) jTable_cliente.getValueAt(selectedRow, 0);
//
//                    // Rellenamos los campos con los valores de la fila seleccionada
//                    txt_nombre.setText(jTable_cliente.getValueAt(selectedRow, 1).toString());
//                    txt_apellido.setText(jTable_cliente.getValueAt(selectedRow, 2).toString());
//                    txt_cedula.setText(jTable_cliente.getValueAt(selectedRow, 3).toString());
//                    txt_telefono.setText(jTable_cliente.getValueAt(selectedRow, 4).toString());
//                    txt_direccion.setText(jTable_cliente.getValueAt(selectedRow, 5).toString());
//                    txt_estado.setText(jTable_cliente.getValueAt(selectedRow, 6).toString());
//                }
//            }
//        });
    }

}
